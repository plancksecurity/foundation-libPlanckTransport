import org.gradle.internal.os.OperatingSystem

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.0'
    id 'java-library'
}

group 'security.pEp'
version '0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceSets {
    main.kotlin.srcDirs = ['../../src']
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation fileTree(dir: '../../libs', include: ['*.jar'])
    implementation fileTree(dir: '../../../libs', include: ['*.jar'])
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2-native-mt"
}

task cleanSrc() {
    description = "make clean"
    if (!OperatingSystem.current().isWindows()) {
        exec {
            def command = ['make', 'clean']
            workingDir "../../src"
            commandLine command
        }
    }
}

task makeSrc(dependsOn: 'cleanSrc') {
    description = "make src"
    if (OperatingSystem.current().isWindows()) {
        exec {
            def command = ['cmd', '/c', 'generate_code.cmd']
            workingDir "../../build-windows"
            commandLine command
        }
    } else {
        exec {
            def command = ['make', 'all']
            workingDir "../../src"
            commandLine command
        }
    }
}

tasks.getByName('assemble').dependsOn(makeSrc)


